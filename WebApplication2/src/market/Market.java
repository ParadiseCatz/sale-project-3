
package market;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Market", targetNamespace = "http://Market/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Market {


    /**
     * 
     * @param idbarang
     * @param idpenjual
     * @param namabarang
     */
    @WebMethod
    @RequestWrapper(localName = "delete", targetNamespace = "http://Market/", className = "market.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://Market/", className = "market.DeleteResponse")
    @Action(input = "http://Market/Market/deleteRequest", output = "http://Market/Market/deleteResponse")
    public void delete(
        @WebParam(name = "idpenjual", targetNamespace = "")
        int idpenjual,
        @WebParam(name = "idbarang", targetNamespace = "")
        int idbarang,
        @WebParam(name = "namabarang", targetNamespace = "")
        String namabarang);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Market/", className = "market.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Market/", className = "market.HelloResponse")
    @Action(input = "http://Market/Market/helloRequest", output = "http://Market/Market/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param searchType
     * @param searchKey
     * @param userID
     * @return
     *     returns java.util.List<market.Produk>
     */
    @WebMethod
    @WebResult(name = "Produk", targetNamespace = "")
    @RequestWrapper(localName = "listCatalog", targetNamespace = "http://Market/", className = "market.ListCatalog")
    @ResponseWrapper(localName = "listCatalogResponse", targetNamespace = "http://Market/", className = "market.ListCatalogResponse")
    @Action(input = "http://Market/Market/listCatalogRequest", output = "http://Market/Market/listCatalogResponse")
    public List<Produk> listCatalog(
        @WebParam(name = "userID", targetNamespace = "")
        int userID,
        @WebParam(name = "searchType", targetNamespace = "")
        String searchType,
        @WebParam(name = "searchKey", targetNamespace = "")
        String searchKey);

    /**
     * 
     * @param nama
     * @param foto
     * @param price
     * @param description
     * @param userid
     * @param username
     * @return
     *     returns java.lang.Boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addProduct", targetNamespace = "http://Market/", className = "market.AddProduct")
    @ResponseWrapper(localName = "addProductResponse", targetNamespace = "http://Market/", className = "market.AddProductResponse")
    @Action(input = "http://Market/Market/addProductRequest", output = "http://Market/Market/addProductResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Market/Market/addProduct/Fault/Exception")
    })
    public Boolean addProduct(
        @WebParam(name = "userid", targetNamespace = "")
        int userid,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "price", targetNamespace = "")
        String price,
        @WebParam(name = "foto", targetNamespace = "")
        String foto)
        throws Exception_Exception
    ;

    /**
     * 
     * @param idUser
     * @param idBarang
     * @return
     *     returns java.lang.Boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkLike", targetNamespace = "http://Market/", className = "market.CheckLike")
    @ResponseWrapper(localName = "checkLikeResponse", targetNamespace = "http://Market/", className = "market.CheckLikeResponse")
    @Action(input = "http://Market/Market/checkLikeRequest", output = "http://Market/Market/checkLikeResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Market/Market/checkLike/Fault/Exception")
    })
    public Boolean checkLike(
        @WebParam(name = "id_user", targetNamespace = "")
        int idUser,
        @WebParam(name = "id_barang", targetNamespace = "")
        int idBarang)
        throws Exception_Exception
    ;

    /**
     * 
     * @param idpenjual
     * @return
     *     returns java.util.List<market.Produk>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "yourproduct", targetNamespace = "http://Market/", className = "market.Yourproduct")
    @ResponseWrapper(localName = "yourproductResponse", targetNamespace = "http://Market/", className = "market.YourproductResponse")
    @Action(input = "http://Market/Market/yourproductRequest", output = "http://Market/Market/yourproductResponse")
    public List<Produk> yourproduct(
        @WebParam(name = "idpenjual", targetNamespace = "")
        int idpenjual);

    /**
     * 
     * @param idpenjual
     * @return
     *     returns java.util.List<market.Transaction>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sales", targetNamespace = "http://Market/", className = "market.Sales")
    @ResponseWrapper(localName = "salesResponse", targetNamespace = "http://Market/", className = "market.SalesResponse")
    @Action(input = "http://Market/Market/salesRequest", output = "http://Market/Market/salesResponse")
    public List<Transaction> sales(
        @WebParam(name = "idpenjual", targetNamespace = "")
        int idpenjual);

    /**
     * 
     * @param idPembeli
     * @return
     *     returns java.util.List<market.ConfirmPurchase>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "confirmationPurchase", targetNamespace = "http://Market/", className = "market.ConfirmationPurchase")
    @ResponseWrapper(localName = "confirmationPurchaseResponse", targetNamespace = "http://Market/", className = "market.ConfirmationPurchaseResponse")
    @Action(input = "http://Market/Market/confirmationPurchaseRequest", output = "http://Market/Market/confirmationPurchaseResponse")
    public List<ConfirmPurchase> confirmationPurchase(
        @WebParam(name = "idPembeli", targetNamespace = "")
        int idPembeli);

    /**
     * 
     * @param idPembeli
     * @param userid
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "likeProduct", targetNamespace = "http://Market/", className = "market.LikeProduct")
    @ResponseWrapper(localName = "likeProductResponse", targetNamespace = "http://Market/", className = "market.LikeProductResponse")
    @Action(input = "http://Market/Market/likeProductRequest", output = "http://Market/Market/likeProductResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Market/Market/likeProduct/Fault/Exception")
    })
    public boolean likeProduct(
        @WebParam(name = "idPembeli", targetNamespace = "")
        String idPembeli,
        @WebParam(name = "userid", targetNamespace = "")
        String userid)
        throws Exception_Exception
    ;

    /**
     * 
     * @param idPembeli
     * @param userid
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unlikeProduct", targetNamespace = "http://Market/", className = "market.UnlikeProduct")
    @ResponseWrapper(localName = "unlikeProductResponse", targetNamespace = "http://Market/", className = "market.UnlikeProductResponse")
    @Action(input = "http://Market/Market/unlikeProductRequest", output = "http://Market/Market/unlikeProductResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Market/Market/unlikeProduct/Fault/Exception")
    })
    public boolean unlikeProduct(
        @WebParam(name = "idPembeli", targetNamespace = "")
        String idPembeli,
        @WebParam(name = "userid", targetNamespace = "")
        String userid)
        throws Exception_Exception
    ;

    /**
     * 
     * @param productid
     * @param price
     * @param description
     * @param namaBarang
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editProduct", targetNamespace = "http://Market/", className = "market.EditProduct")
    @ResponseWrapper(localName = "editProductResponse", targetNamespace = "http://Market/", className = "market.EditProductResponse")
    @Action(input = "http://Market/Market/editProductRequest", output = "http://Market/Market/editProductResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://Market/Market/editProduct/Fault/Exception")
    })
    public boolean editProduct(
        @WebParam(name = "productid", targetNamespace = "")
        String productid,
        @WebParam(name = "namaBarang", targetNamespace = "")
        String namaBarang,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "price", targetNamespace = "")
        String price)
        throws Exception_Exception
    ;

    /**
     * 
     * @param idpembeli
     * @return
     *     returns java.util.List<market.Transaction>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "purchase", targetNamespace = "http://Market/", className = "market.Purchase")
    @ResponseWrapper(localName = "purchaseResponse", targetNamespace = "http://Market/", className = "market.PurchaseResponse")
    @Action(input = "http://Market/Market/purchaseRequest", output = "http://Market/Market/purchaseResponse")
    public List<Transaction> purchase(
        @WebParam(name = "idpembeli", targetNamespace = "")
        int idpembeli);

}
